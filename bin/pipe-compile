#!/usr/bin/env php
<?php

require_once(__DIR__ . "/../../../autoload.php");

use Ulrichsg\Getopt,
    Pipe\Environment,
    Pipe\Config;

$opts = new Getopt(array(
    array("c", "config", Getopt::REQUIRED_ARGUMENT),
    array('p', 'path', Getopt::REQUIRED_ARGUMENT),
    array(null, 'debug', Getopt::NO_ARGUMENT),
    array('C', 'compress', Getopt::NO_ARGUMENT),
    array(null, 'js-compressor', Getopt::REQUIRED_ARGUMENT),
    array(null, 'css-compressor', Getopt::REQUIRED_ARGUMENT),
));

function displayUsage()
{
    return <<<EOT
Usage: pipe-compile [-c|--config <config>] [-p|--path <path>] [--js-compressor <compressor>] <file> [> <output_file>]

EOT;
}

try {
    $opts->parse();
} catch (\InvalidArgumentException $e) {
    fwrite(STDERR, displayUsage());
    exit(255);
}

$files = $opts->getOperands();

if (count($files) < 1) {
    fwrite(STDERR, displayUsage());
    exit(255);
}

$paths = array_filter(explode(':', $opts->getOption("path")));
$configFile = $opts->getOption("config") ?: "pipe_config.yml";

if (file_exists($configFile)) {
    $config = Config::fromYaml($configFile);
} else {
    $config = new Config();
}

if ($cssCompressor = $opts->getOption("css-compressor")) {
    $config->cssCompressor = $cssCompressor;
}

if ($jsCompressor = $opts->getOption("js-compressor")) {
    $config->jsCompressor = $jsCompressor;
}

if ($opts->getOption("debug")) {
    $config->debug = true;
}

$env = $config->createEnvironment();
$env->appendPath(getcwd());

foreach ($paths as $path) {
    $env->appendPath($path);
}

$out = '';

foreach ($files as $file) {
    $asset = $env->find($file, array("bundled" => true));

    if (!$asset) {
        fwrite(STDERR, "pipe-compile: Asset '$file' not found.\n");
        exit(1);
    }

    $out .= $asset->getBody() . "\n";
}

if ($opts->getOption('compress')) {
    $out = gzencode($out, 9);
}

echo $out;
